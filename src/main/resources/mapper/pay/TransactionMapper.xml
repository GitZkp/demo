<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suke.czx.modules.pay.dao.TransactionMapper">
  <resultMap id="BaseResultMap" type="com.suke.czx.modules.pay.entity.Transaction">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_sn" jdbcType="VARCHAR" property="orderSn" />
    <result column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="integral" jdbcType="INTEGER" property="integral" />
    <result column="pay_state" jdbcType="TINYINT" property="payState" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="completion_time" jdbcType="INTEGER" property="completionTime" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Base_Column_List">
    id, order_sn, member_id, amount, integral, pay_state, source, status, completion_time, 
    note, created_at, updated_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from transaction
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from transaction
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.suke.czx.modules.pay.entity.Transaction">
    insert into transaction (id, order_sn, member_id, 
      amount, integral, pay_state, 
      source, status, completion_time, 
      note, created_at, updated_at
      )
    values (#{id,jdbcType=INTEGER}, #{orderSn,jdbcType=VARCHAR}, #{memberId,jdbcType=BIGINT}, 
      #{amount,jdbcType=DECIMAL}, #{integral,jdbcType=INTEGER}, #{payState,jdbcType=TINYINT}, 
      #{source,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{completionTime,jdbcType=INTEGER}, 
      #{note,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.suke.czx.modules.pay.entity.Transaction">
    insert into transaction
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderSn != null">
        order_sn,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="integral != null">
        integral,
      </if>
      <if test="payState != null">
        pay_state,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="completionTime != null">
        completion_time,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderSn != null">
        #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="integral != null">
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="payState != null">
        #{payState,jdbcType=TINYINT},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="completionTime != null">
        #{completionTime,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.suke.czx.modules.pay.entity.Transaction">
    update transaction
    <set>
      <if test="orderSn != null">
        order_sn = #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="integral != null">
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="payState != null">
        pay_state = #{payState,jdbcType=TINYINT},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="completionTime != null">
        completion_time = #{completionTime,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.suke.czx.modules.pay.entity.Transaction">
    update transaction
    set order_sn = #{orderSn,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=BIGINT},
      amount = #{amount,jdbcType=DECIMAL},
      integral = #{integral,jdbcType=INTEGER},
      pay_state = #{payState,jdbcType=TINYINT},
      source = #{source,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      completion_time = #{completionTime,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>